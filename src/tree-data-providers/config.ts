export interface IRemoteInstance {
  name: string,
  openApiUrl?: string,
  url?: string,
  apiKey?: string,
  enabledMethods?: string[]
  remote: boolean
}

export const config : IRemoteInstance[]= [
  {
    name: 'Local',
    remote: false, 
  },
  {
    remote: true,
    apiKey: 'test123',
    openApiUrl: 'http://localhost:3332/open-api.json',
    url: 'http://localhost:3332/agent',
    name: 'mbp',
    enabledMethods: [
      'keyManagerGetKeyManagementSystems',
        'keyManagerCreate',
        'keyManagerGet',
        'keyManagerDelete',
        'keyManagerImport',
        'keyManagerEncryptJWE',
        'keyManagerDecryptJWE',
        'keyManagerSign',
        'keyManagerSharedSecret',
        'keyManagerSignJWT',
        'keyManagerSignEthTX',
        'didManagerGetProviders',
        'didManagerFind',
        'didManagerGet',
        'didManagerCreate',
        'didManagerGetOrCreate',
        'didManagerImport',
        'didManagerDelete',
        'didManagerAddKey',
        'didManagerRemoveKey',
        'didManagerAddService',
        'didManagerRemoveService',
        'resolveDid',
        'getDIDComponentById',
        'discoverDid',
        'dataStoreGetMessage',
        'dataStoreSaveMessage',
        'dataStoreGetVerifiableCredential',
        'dataStoreSaveVerifiableCredential',
        'dataStoreGetVerifiablePresentation',
        'dataStoreSaveVerifiablePresentation',
        'dataStoreORMGetIdentifiers',
        'dataStoreORMGetIdentifiersCount',
        'dataStoreORMGetMessages',
        'dataStoreORMGetMessagesCount',
        'dataStoreORMGetVerifiableCredentialsByClaims',
        'dataStoreORMGetVerifiableCredentialsByClaimsCount',
        'dataStoreORMGetVerifiableCredentials',
        'dataStoreORMGetVerifiableCredentialsCount',
        'dataStoreORMGetVerifiablePresentations',
        'dataStoreORMGetVerifiablePresentationsCount',
        'handleMessage',
        'packDIDCommMessage',
        'unpackDIDCommMessage',
        'sendDIDCommMessage',
        'sendMessageDIDCommAlpha1',
        'createVerifiableCredential',
        'createVerifiablePresentation',
        'verifyCredential',
        'verifyPresentation',
        'createSelectiveDisclosureRequest',
        'getVerifiableCredentialsForSdr',
        'validatePresentationAgainstSdr',
    ]
  }
];